{"version":3,"sources":["helpers/encoding.ts","../node_modules/@elrondnetwork/bls-wasm sync /^/.//.*/.js$","context/reducer.ts","context/state.ts","context/index.tsx","config.tsx","components/PageTitle/index.tsx","helpers/asyncRequests.ts","helpers/firestoreQuery.ts","pages/Home/index.tsx","pages/Transaction/useNewTransaction.ts","components/PageState/index.tsx","pages/Transaction/index.tsx","routes.ts","components/Layout/index.tsx","components/PageNotFoud/index.tsx","pages/Connect/maiar.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["int2hex","val","str","toString","length","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","reducer","state","action","type","transactions","transactionsFetched","initialState","undefined","Context","React","Dispatch","ContextProvider","children","dispatch","Provider","value","dAppName","decimals","denomination","gasPrice","version","gasLimit","gasPerDataByte","walletConnectBridge","walletConnectDeepLink","network","name","egldLabel","walletAddress","apiAddress","gatewayAddress","explorerAddress","smartContractAddress","smartContractInitialCount","withPageTitle","title","Component","Memoized","memo","useEffect","document","getAccountDetails","address","a","axios","get","config","data","success","getSmartContractData","initializeApp","apiKey","authDomain","projectId","db","getFirestore","getDocs","collection","querySnapshot","doc","docs","filter","d","Home","useState","selectedPaymentData","setSelectedPaymentData","paymentData","setPaymentData","remainingSupply","setRemainingSupply","didMount","setDidMount","quantity","setQuantity","Dapp","loggedIn","send","newTransaction","chainId","rawTransaction","GasLimit","configGasLimit","Transaction","Balance","egld","TransactionPayload","receiver","Address","GasPrice","chainID","ChainID","valueOf","TransactionVersion","useNewTransaction","history","useHistory","dappLogout","buyNftTransaction","handleButtonClick","preventDefault","currentTarget","classList","contains","tokenDisplayName","parseFloat","contractPrice","toFixed","transaction","callbackRoute","routeNames","push","walletconnect","increment","decrement","then","response","parseInt","supply","Promise","all","scData","accountDetails","egldPrice","parsePrice","EGLD","pd","paymentInfo","tokenTicker","tokenNonce","userBalance","balance","className","style","fontSize","payment","paddingLeft","paddingRight","onClick","maxWidth","textAlign","border","padding","href","callbackUrl","window","location","origin","home","logOut","paymentComponent","PageState","description","svgComponent","spin","fontFamily","search","useLocation","query","URLSearchParams","fromEntries","status","txHash","icon","faCheck","target","to","faTimes","wrappedRoutes","path","component","route","authenticatedRoute","Boolean","Layout","refreshAccount","routes","unlockRoute","PageNotFound","pathname","faSearch","MaiarConnect","from","WalletConnect","logoutRoute","lead","App","basename","process","exact","i","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d00d9aa7.chunk.js","sourcesContent":["import { decode } from \"bech32-buffer\";\n\nexport const str2hex = (val: string) => {\n    return Buffer.from(val).toString(\"hex\");\n}\n\nexport const int2hex = (val: number) => {\n    let str = val.toString(16);\n    if (str.length % 2 == 0)\n        return str;\n    return \"0\" + str;\n}\n\nexport const decodeAddress = (erdAddress: string) => {\n    let decoded = decode(erdAddress).data;\n    return Buffer.from(decoded || new Uint8Array()).toString(\"hex\");\n}","var map = {\n\t\"./bls.js\": 280,\n\t\"./bls_c.js\": 313\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 570;","import { StateType, TransactionType } from \"./state\";\n\nexport type ActionType = {\n  type: \"setTransactions\";\n  transactions: TransactionType[];\n  transactionsFetched: StateType[\"transactionsFetched\"];\n};\n\nexport function reducer(state: StateType, action: ActionType): StateType {\n  switch (action.type) {\n    case \"setTransactions\": {\n      const newState: StateType = {\n        ...state,\n        transactions: action.transactions,\n        transactionsFetched: action.transactionsFetched,\n      };\n      return newState;\n    }\n    default: {\n      throw new Error(`Unhandled action type: ${action?.type}`);\n    }\n  }\n}\n","interface ScResultType {\n  callType: string;\n  gasLimit: number;\n  gasPrice: number;\n  nonce: number;\n  prevTxHash: string;\n  receiver?: string;\n  sender: string;\n  value: string;\n  data?: string;\n  returnMessage?: string;\n}\n\ntype TxStatusType = \"pending\" | \"notExecuted\" | \"success\" | \"fail\";\n\nexport interface TransactionType {\n  fee?: string;\n  blockHash: string;\n  data: string;\n  gasLimit: number;\n  gasPrice: number;\n  gasUsed: string;\n  txHash: string;\n  miniBlockHash: string;\n  nonce: number;\n  receiver: string;\n  receiverShard: number;\n  round: number;\n  sender: string;\n  senderShard: number;\n  signature: string;\n  status: TxStatusType;\n  timestamp: number;\n  value: string;\n  scResults?: ScResultType[];\n}\n\nexport interface StateType {\n  transactions: TransactionType[];\n  transactionsFetched: boolean | undefined;\n}\n\nconst initialState = (): StateType => {\n  return {\n    transactions: [],\n    transactionsFetched: undefined,\n  };\n};\n\nexport default initialState;\n","import * as React from \"react\";\nimport { ActionType, reducer } from \"./reducer\";\nimport initialState, { StateType } from \"./state\";\n\ntype DispatchType = (action: ActionType) => void;\nexport interface ContextType {\n  children: React.ReactNode;\n}\n\nconst Context = React.createContext<StateType | undefined>(undefined);\nconst Dispatch = React.createContext<DispatchType | undefined>(undefined);\n\nfunction ContextProvider({ children }: ContextType) {\n  const [state, dispatch] = React.useReducer(reducer, initialState());\n  return (\n    <Context.Provider value={state}>\n      <Dispatch.Provider value={dispatch}>{children}</Dispatch.Provider>\n    </Context.Provider>\n  );\n}\n\nfunction useContext() {\n  const context = React.useContext(Context);\n  if (context === undefined) {\n    throw new Error(\"useState must be used within a Context.Provider\");\n  }\n  return context;\n}\n\nfunction useDispatch() {\n  const context = React.useContext(Dispatch);\n  if (context === undefined) {\n    throw new Error(\"useDispatch must be used within a Dispatch.Provider\");\n  }\n  return context;\n}\n\nexport { ContextProvider, useContext, useDispatch };\n","import * as Dapp from \"@elrondnetwork/dapp\";\n\nexport const dAppName = \"Alien Punks NFT\";\nexport const decimals = 2;\nexport const denomination = 18;\nexport const gasPrice = 1000000000;\nexport const version = 1;\nexport const gasLimit = 50000;\nexport const gasPerDataByte = 1500;\n\nexport const walletConnectBridge = \"https://bridge.walletconnect.org\";\nexport const walletConnectDeepLink =\n  \"https://maiar.page.link/?apn=com.elrond.maiar.wallet&isi=1519405832&ibi=com.elrond.maiar.wallet.dev&link=https://maiar.com/\";\n\n// export const network: Dapp.NetworkType = {\n//   id: \"devnet\",\n//   name: \"Devnet\",\n//   egldLabel: \"xEGLD\",\n//   walletAddress: \"https://devnet-wallet.elrond.com\",\n//   apiAddress: \"https://devnet-api.elrond.com\",\n//   gatewayAddress: \"https://devnet-gateway.elrond.com\",\n//   explorerAddress: \"http://devnet-explorer.elrond.com/\",\n// };\n\nexport const network: Dapp.NetworkType = {\n  id: \"mainnet\",\n  name: \"Mainnet\",\n  egldLabel: \"EGLD\",\n  walletAddress: \"https://wallet.elrond.com\",\n  apiAddress: \"https://api.elrond.com\",\n  gatewayAddress: \"https://gateway.elrond.com\",\n  explorerAddress: \"http://explorer.elrond.com/\",\n};\n\n// export const smartContractAddress = \"erd1qqqqqqqqqqqqqpgqp3u6qp0g059ldhesthrr0nlvvvmzdt6l6ppsspn0pf\";\n// export const smartContractAddress = \"erd1qqqqqqqqqqqqqpgqwpu4xhfxgrr5qwsffvjt2c479jrr3et9yl5s48ax8a\";\nexport const smartContractAddress = \"erd1qqqqqqqqqqqqqpgqcrlhrnk0zhn7nncmmd0wr2lpna7zxukxyl5swdtcju\";\nexport const smartContractInitialCount = 989;","import React, { useEffect, memo } from \"react\";\n\nconst withPageTitle = (title: string, Component: React.ComponentType) => () => {\n  const Memoized = memo(Component);\n\n  useEffect(() => {\n    document.title = title;\n  }, []);\n  return <Memoized />;\n};\n\nexport default withPageTitle;\n","import axios from \"axios\";\nimport * as config from \"../config\";\n\ninterface GetCollectionsType {\n    address: string;\n}\n\nconst fetchWalletNFTs = () =>\n    async function getWalletNFTs({ address }: GetCollectionsType) {\n        try {\n            const { data } = await axios.get(\n                `${config.network.gatewayAddress}/address/${address}/esdt`\n            );\n            return {\n                data: data,\n                success: data !== undefined,\n            };\n        } catch (err) {\n            return {\n                success: false,\n            };\n        }\n    };\n\nconst fetchCollectionNftCount = () =>\n    async function getCollectionNftCount(collectionTicker: string) {\n        try {\n            const { data } = await axios.get(\n                `${config.network.apiAddress}/nfts/count?collection=${collectionTicker}`\n            );\n            return {\n                data: data,\n                success: data !== undefined,\n            };\n        } catch (err) {\n            return {\n                success: false,\n            };\n        }\n    };\n\nconst fetchAccountDetails = () =>\n    async function getAccountDetails(address: string) {\n        try {\n            const { data } = await axios.get(\n                `${config.network.apiAddress}/accounts/${address}`\n            );\n            return {\n                data: data,\n                success: data !== undefined,\n            };\n        } catch (err) {\n            return {\n                success: false,\n            };\n        }\n    };\n\nexport const getWalletNFTs = fetchWalletNFTs();\nexport const getCollectionNFTCount = fetchCollectionNftCount();\nexport const getAccountDetails = fetchAccountDetails();","import axios from \"axios\";\nimport { initializeApp } from \"firebase/app\"\nimport { getFirestore, collection, getDocs } from \"firebase/firestore\"\n\n\nconst fetchSmartContractData = () =>\n    async function getSmartContractData(address: string) {\n        try {\n            const firebaseApp = initializeApp({\n                apiKey: \"AIzaSyAoCQ_chvQfO4CAEqULXqgZbRAlsrtv3ms\",\n                authDomain: \"sideproject-caching.firebaseapp.com\",\n                projectId: \"sideproject-caching\",\n              });\n            const db = getFirestore();\n            const querySnapshot = await getDocs(collection(db, \"smart contracts\"));\n            \n            let doc = querySnapshot.docs.filter(d => d.id === address)\n            if(doc.length === 0)\n              return undefined;\n            return doc[0].data();\n\n        } catch (err) {\n            return {\n                success: false,\n            };\n        }\n    };\n\nexport const getSmartContractData = fetchSmartContractData();","import { routeNames } from \"../../routes\";\nimport * as Dapp from \"@elrondnetwork/dapp\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport useNewTransaction from \"../Transaction/useNewTransaction\";\nimport { smartContractAddress, smartContractInitialCount } from \"../../config\";\nimport { fetchQueryHex } from \"../../helpers/sqQueries\";\nimport { RawTransactionType, PaymentInfo } from \"../../helpers/types\";\nimport { Address, AddressValue, TokenIdentifierValue, U8Value } from \"@elrondnetwork/erdjs/out\";\nimport { int2hex, str2hex } from \"../../helpers/encoding\";\nimport { getAccountDetails, getWalletNFTs } from \"../../helpers/asyncRequests\";\nimport { getSmartContractData } from \"../../helpers/firestoreQuery\";\nimport BigNumber from \"bignumber.js\"\n\nconst Home = () => {\n  const max = 7;\n  const min = 1;\n  const [selectedPaymentData, setSelectedPaymentData] = React.useState<PaymentInfo>();\n  const [paymentData, setPaymentData] = React.useState<PaymentInfo[]>([]);\n  const [remainingSupply, setRemainingSupply] = React.useState<number>(0);\n  const [didMount, setDidMount] = React.useState<boolean>(false);\n  // const [mintPrice, setMintPrice] = React.useState<number>(0);\n  const [quantity, setQuantity] = React.useState<number>(min);\n  const { loggedIn, address } = Dapp.useContext();\n  const send = Dapp.useSendTransaction();\n  const newTransaction = useNewTransaction();\n  const history = useHistory();\n  const dappLogout = Dapp.useLogout();\n\n  const logOut = (e: React.MouseEvent) => {\n    e.preventDefault();\n    dappLogout({ callbackUrl: `${window.location.origin}${routeNames.home}` });\n    history.push(routeNames.walletconnect);\n  };\n\n  const computePriceByQty = (payment: PaymentInfo) => {\n    return parseFloat((quantity * payment.contractPrice).toFixed(3));\n  }\n\n  const buyNftTransaction: RawTransactionType = {\n    receiver: smartContractAddress,\n    value: \"0\",// computePriceByQty().toString(),\n    gasLimit: 20_000000 + (95_000000 * quantity),\n    data: ``\n  };\n\n  const setTransactionData = () => {\n    if (!selectedPaymentData)\n      return;\n    switch (selectedPaymentData?.tokenDisplayName) {\n      case \"EGLD\":\n        buyNftTransaction.value = parseFloat((selectedPaymentData.contractPrice * quantity).toFixed(3)).toString();//(quantity * (selectedPaymentData?.contractPrice)).toString();\n        buyNftTransaction.data = `buyNft@01@${int2hex(quantity)}`;\n        buyNftTransaction.receiver = smartContractAddress;\n        // buyNftTransaction.gasLimit = 600_000_000; //110_000000 + ((quantity - 1) * 85_000000);\n        buyNftTransaction.gasLimit = 10_000_000 + ((quantity - 1) * 3_000_000);\n        break;\n    }\n  }\n\n  const handleButtonClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    if (e.currentTarget.classList.contains(\"disabled\"))\n      return;\n    if (!loggedIn) {\n      history.push(routeNames.walletconnect);\n    }\n    else {\n      setTransactionData();\n      let transaction = newTransaction(buyNftTransaction);\n      send({\n        transaction: transaction,\n        callbackRoute: routeNames.transaction\n      });\n    }\n  }\n\n  const increment = (e: React.MouseEvent) => {\n    e.preventDefault();\n    if (e.currentTarget.classList.contains(\"disabled\"))\n      return;\n    if (quantity == max || quantity == remainingSupply) {\n      return;\n    }\n\n    setQuantity(quantity + 1);\n  }\n\n  const decrement = (e: React.MouseEvent) => {\n    e.preventDefault();\n    if (e.currentTarget.classList.contains(\"disabled\"))\n      return;\n    if (quantity == min) {\n      return;\n    }\n\n    setQuantity(quantity - 1);\n  }\n\n  const init = () => {\n    if (didMount)\n      return;\n\n    getSmartContractData(smartContractAddress).then(response => {\n      if (response === undefined)\n        return;\n      setRemainingSupply(parseInt(response.supply, 16) || 0)\n    });\n    if (!loggedIn)\n      return;\n    Promise.all([\n      getSmartContractData(smartContractAddress),\n      getAccountDetails(address),\n    ]).then(([\n      scData,\n      accountDetails,\n    ]) => {\n      let egldPrice = parsePrice(scData?.EGLD);\n      let pd = [];\n      let paymentInfo: PaymentInfo = {\n        tokenDisplayName: \"EGLD\",\n        tokenTicker: \"\",\n        tokenNonce: \"00\",\n        userBalance: parseInt(accountDetails.data.balance) / 1_000_000_000_000_000_000,\n        contractPrice: egldPrice\n      };\n      pd.push(paymentInfo);\n      setSelectedPaymentData(pd[0]);\n      setPaymentData(pd);\n    });\n    setDidMount(true);\n  }\n\n  React.useEffect(() => {\n    init();\n  }, [loggedIn]);\n\n  const parsePrice = (val: string) => {\n    if (val == \"-1\") {\n      return 0;\n    }\n    else {\n      let price = parseInt(val, 16);\n      return price / 1_000_000_000_000_000_000;\n    }\n  }\n\n  const paymentComponent = () => selectedPaymentData && <>\n    <div className=\"d-flex justify-content-center mt-2 mb-5\">\n      <h6 style={{fontSize: \"30px\"}}>Buy price: {computePriceByQty(selectedPaymentData)} {selectedPaymentData.tokenDisplayName}</h6>\n    </div>\n\n    <div className=\"d-flex justify-content-center mt-3\">\n      <h6 style={{fontSize: \"28px\"}}>Quantity:</h6>\n    </div>\n    <div className=\"d-flex justify-content-center mt-3\">\n      <div className=\"d-flex justify-content-center mt-3\">\n        <button style={{paddingLeft: \"20px\", paddingRight: \"21px\"}} className={\"btn btn-danger mr-2\" + (remainingSupply > 0 ? \"\" : \" disabled\")} onClick={decrement}>\n          &mdash;\n        </button>\n        {/* <input className=\"quantity-input__screen ml-2 mr-2\" type=\"text\" value={quantity} readOnly style={{ maxWidth: \"55px\", textAlign: \"center\", border: \"none\", fontSize: \"24px\" }} /> */}\n        <p className=\"quantity-input__screen ml-4 mr-4\" style={{ maxWidth: \"55px\", textAlign: \"center\", border: \"none\", fontSize: \"24px\" }}>{quantity}</p>\n        <button style={{padding: \"15px\"}} className={\"btn btn-success ml-2\" + (remainingSupply > 0 ? \"\" : \" disabled\")} onClick={increment}>\n          &#xff0b;\n        </button>\n      </div>\n    </div>\n    <div className=\"d-flex justify-content-center mt-5 mb-4\">\n      <a href=\"#\" style={{fontSize: \"32px\"}} className={\"btn default-button\" + (remainingSupply > 0 ? \"\" : \" disabled\")} onClick={(e) => handleButtonClick(e)}>Buy NFT</a>\n    </div>\n    <div className=\"d-flex justify-content-center mb-5\">\n      <a href=\"#\" className={\"btn btn-sm default-button-danger\"} onClick={(e) => logOut(e)}>Disconnect</a>\n    </div>\n  </>;\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-lg-12 col-sm-12\">\n          <div className=\"d-flex justify-content-center mt-5 mb-5\">\n            <h5 style={{fontSize: \"60px\"}}>Alien Punks</h5>\n          </div>\n          <div className=\"d-flex justify-content-center mt-3\">\n            <h6 style={{fontSize: \"34px\"}}>Remaining supply: {remainingSupply}/{smartContractInitialCount}</h6>\n          </div>\n          {loggedIn && paymentData.length > 0 && paymentComponent()}\n          {!loggedIn && <>\n            <div className=\"d-flex justify-content-center mt-5 mb-5\">\n              <a href=\"#\" className={\"btn default-button\" + (remainingSupply > 0 ? \"\" : \" disabled\")} onClick={(e) => handleButtonClick(e)}>Connect with Maiar</a>\n            </div>\n          </>}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import * as Dapp from \"@elrondnetwork/dapp\";\nimport {\n  Transaction,\n  GasPrice,\n  Address,\n  TransactionPayload,\n  Balance,\n  ChainID,\n  TransactionVersion,\n  GasLimit,\n} from \"@elrondnetwork/erdjs\";\nimport {\n  gasPrice,\n  version,\n  gasLimit as configGasLimit,\n  gasPerDataByte,\n} from \"../../config\";\nimport { RawTransactionType } from \"../../helpers/types\";\n\nexport default function useNewTransaction() {\n  const { chainId } = Dapp.useContext();\n\n  return (rawTransaction: RawTransactionType) => {\n    const gasLimit = rawTransaction.gasLimit\n      ? new GasLimit(rawTransaction.gasLimit)\n      : Dapp.calculateGasLimit({\n          data: rawTransaction.data || \"\",\n          gasLimit: configGasLimit,\n          gasPerDataByte,\n        });\n    return new Transaction({\n      value: Balance.egld(rawTransaction.value),\n      data: new TransactionPayload(rawTransaction.data),\n      receiver: new Address(rawTransaction.receiver),\n      gasLimit,\n      gasPrice: new GasPrice(gasPrice),\n      chainID: new ChainID(chainId.valueOf()),\n      version: new TransactionVersion(version),\n    });\n  };\n}\n","import * as React from \"react\";\n\nconst PageState = ({\n  title,\n  description,\n  svgComponent,\n  className,\n  spin = false,\n}: {\n  title?: string;\n  description?: string | React.ReactNode;\n  svgComponent: React.ReactNode;\n  className?: string;\n  spin?: boolean;\n}) => {\n  return (\n    <div className=\"d-flex flex-fill justify-content-center align-items-center container page-state\" style={{fontFamily: \"Amiko\"}}>\n      <div className=\"row w-100 mt-5 mb-5\">\n        {spin ? (\n          <div className=\"col-12 text-center d-flex justify-content-center\" data-testid=\"loader\">\n            <div className=\"lds-ellipsis mx-auto mt-5 mb-5\">\n              <div />\n            </div>\n          </div>\n        ) : (\n          <div className=\"col-12 mx-auto\">\n              <div className=\"text-center d-flex flex-column justify-content-center\">\n                <div className={`icon ${className ? className : \"\"}`}>\n                  {svgComponent}\n                </div>\n                {title && <p className=\"h4 mt-3\">{title}</p>}\n                {description && <div className=\"mt-3\">{description}</div>}\n              </div>\n            </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PageState;\n","import * as React from \"react\";\nimport * as Dapp from \"@elrondnetwork/dapp\";\nimport { faCheck, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport PageState from \"../../components/PageState\";\nimport { routeNames } from \"../../routes\";\n\nconst Transaction = () => {\n  const { search } = useLocation();\n  const { explorerAddress } = Dapp.useContext();\n\n  const query = new URLSearchParams(search);\n  const { status, txHash } = Object.fromEntries(query);\n\n  return status === \"success\" ? (\n    <PageState\n      svgComponent={\n        <FontAwesomeIcon icon={faCheck} className=\"text-success fa-3x\" />\n      }\n      className=\"dapp-icon icon-medium\"\n      title=\"Success\"\n      description={\n        <>\n          <p>\n            <a\n              href={`${explorerAddress}transactions/${txHash}`}\n              {...{\n                target: \"_blank\",\n              }}\n              className=\"btn btn-success mt-3\"\n              title=\"View in Explorer\"\n              style={{fontFamily: \"Audiowide\"}}\n            >\n              Transaction details\n            </a>\n          </p>\n          <Link to={routeNames.home} className=\"btn btn-danger mt-3\" style={{fontFamily: \"Audiowide\"}}>\n            Back\n          </Link>\n        </>\n      }\n    />\n  ) : (\n    <PageState\n      svgComponent={\n        <FontAwesomeIcon icon={faTimes} className=\"text-danger fa-3x\" />\n      }\n      className=\"dapp-icon icon-medium\"\n      title=\"Error\"\n      description={\n        <>\n          <p>\n            <a\n              href={`${explorerAddress}transactions/${txHash}`}\n              {...{\n                target: \"_blank\",\n              }}\n              className=\"btn btn-success mt-3\"\n              title=\"View in Explorer\"\n              style={{fontFamily: \"Audiowide\"}}\n            >\n              Transaction details\n            </a>\n          </p>\n          <Link to={routeNames.home} className=\"btn btn-danger mt-3\" style={{fontFamily: \"Audiowide\"}}>\n            Back\n          </Link>\n        </>\n      }\n    />\n  );\n};\n\nexport default Transaction;\n","import React from \"react\";\nimport * as Dapp from \"@elrondnetwork/dapp\";\nimport { dAppName } from \"./config\";\nimport withPageTitle from \"./components/PageTitle\";\nimport Home from \"./pages/Home\";\nimport Transaction from \"./pages/Transaction\";\n\ntype RouteType = Dapp.RouteType & { title: string };\n\nexport const routeNames = {\n  home: \"/\",\n  transaction: \"/transaction\",\n  walletconnect: \"/walletconnect\",\n};\n\nconst routes: RouteType[] = [\n  {\n    path: \"/\",\n    title: \"Home\",\n    component: Home,\n  },\n  {\n    path: routeNames.transaction,\n    title: \"Transaction\",\n    component: Transaction,\n  },\n];\n\nconst wrappedRoutes = () =>\n  routes.map((route) => {\n    const title = route.title\n      ? `${route.title} • ${dAppName}`\n      : `${dAppName}`;\n    return {\n      path: route.path,\n      authenticatedRoute: Boolean(route.authenticatedRoute),\n      component: withPageTitle(\n        title,\n        route.component,\n      ) as any as React.ComponentClass<any, any>,\n    };\n  });\n\nexport default wrappedRoutes();\n","import React from \"react\";\nimport * as Dapp from \"@elrondnetwork/dapp\";\nimport routes, { routeNames } from \"../../routes\";\n\nconst Layout = ({ children }: { children: React.ReactNode }) => {\n  const { loggedIn } = Dapp.useContext();\n  const refreshAccount = Dapp.useRefreshAccount();\n\n  React.useEffect(() => {\n    if (loggedIn) {\n      refreshAccount();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loggedIn]);\n\n  const styles = {\n    margin: \"10px 20px 10px 20px\",\n    display: \"grid\",\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <main className=\"main-page-container\">\n        <Dapp.Authenticate routes={routes} unlockRoute={routeNames.walletconnect}>\n          {children}\n        </Dapp.Authenticate>\n      </main>\n    </div>\n  );\n};\n\nexport default Layout;\n","import * as React from \"react\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useLocation } from \"react-router-dom\";\n\nconst PageNotFound = () => {\n  const { pathname } = useLocation();\n  return (\n    <div className=\"d-flex flex-fill align-items-center container\">\n      <div className=\"row w-100\">\n        <div className=\"col-12 col-md-8 col-lg-5 mx-auto\">\n          <div className=\"card shadow-sm rounded p-4 border-0\">\n            <div className=\"card-body text-center d-flex flex-column justify-content-center\">\n              <div className=\"dapp-icon icon-medium\">\n                <FontAwesomeIcon\n                  icon={faSearch}\n                  className=\"mx-auto fa-3x mb-2\"\n                />\n              </div>\n              <span className=\"h4 empty-heading mt-3\">Page not found</span>\n              <span className=\"empty-details\">{pathname}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PageNotFound;\n","import * as Dapp from \"@elrondnetwork/dapp\";\nimport { useLocation } from \"react-router-dom\";\nimport { routeNames } from \"../../routes\";\n\n\nconst MaiarConnect = () => {\n    const { search } = useLocation();\n    const query = new URLSearchParams(search);\n    const { from } = Object.fromEntries(query);\n\n    return <Dapp.Pages.WalletConnect\n        callbackRoute={from ?? routeNames.home}\n        logoutRoute=\"/\" /* redirect after logout */\n        title=\"Maiar Login\"\n        lead=\"Scan the QR code using Maiar\"\n    />;\n}\n\nexport default MaiarConnect;","import * as Dapp from \"@elrondnetwork/dapp\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { ContextProvider } from \"./context\";\nimport * as config from \"./config\";\nimport Layout from \"./components/Layout\";\nimport routes from \"./routes\";\nimport PageNotFound from \"./components/PageNotFoud\";\nimport MaiarConnect from \"./pages/Connect/maiar\";\n\nfunction App() {\n  return (\n    <>\n      <Router basename={process.env.PUBLIC_URL}>\n        <ContextProvider>\n          <Dapp.Context\n            config={config}\n          >\n            <Layout>\n              <Switch>\n                <Route\n                  path=\"/walletconnect\" /* must correspond to walletConnectRoute */\n                  component={MaiarConnect}\n                  exact={true}\n                />\n                {routes.map((route, i /* rest of routes */) => (\n                  <Route\n                    path={route.path}\n                    key={route.path + i}\n                    component={route.component}\n                    exact={true}\n                  />\n                ))}\n                <Route component={PageNotFound} />\n              </Switch>\n            </Layout>\n          </Dapp.Context>\n        </ContextProvider>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}